<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:yc="clr-namespace:YorgiControls;assembly=YorgiControls"
        xmlns:view="clr-namespace:MovieOrganiser.View"
        x:Class="MovieOrganiser.View.MainWindow"
        mc:Ignorable="d" 
        Title="Movie Organiser" Height="300" MinWidth="400" MinHeight="300"
        AllowDrop="True"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
    >
    <Grid Background="#969696">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <i:Interaction.Triggers>
            <i:EventTrigger EventName="DragEnter" >
                <mvvm:EventToCommand Command="{Binding DragEnterCommand}" PassEventArgsToCommand="True" EventArgsConverter="{StaticResource DropArgumentsConverter}" />
            </i:EventTrigger>
            <i:EventTrigger EventName="DragLeave" >
                <mvvm:EventToCommand  Command="{Binding DragLeaveCommand}" />
            </i:EventTrigger>
            <i:EventTrigger EventName="Drop"  >
                <mvvm:EventToCommand Command="{Binding DropCommand}" PassEventArgsToCommand="True" EventArgsConverter="{StaticResource DropArgumentsConverter}" />
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <Menu Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" d:IsLocked="True">
            <MenuItem Header="{StaticResource File}">
                <MenuItem Header="{StaticResource Open}" Command="{Binding OpenCommand}"/>
                <MenuItem Header="{StaticResource Quit}" Command="{Binding QuitCommand}"/>
            </MenuItem>
            <MenuItem Header="{StaticResource Options}">
                <MenuItem Header="{StaticResource SetContextMenu}" Command="{Binding SetContextMenuCommand}"/>
                <MenuItem Header="{StaticResource SetMovieLibPath}" Command="{Binding SetLibraryPathCommand}"/>
            </MenuItem>
        </Menu>

        <toolkit:BusyIndicator Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" IsBusy="{Binding IsBusy}" BusyContent="{DynamicResource Waiting}">
            <toolkit:BusyIndicator.ProgressBarStyle>
                <Style TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}" >
                    <Setter Property="Foreground" Value="Orange"/>
                    <Setter Property="Height" Value="25" />
                    <Setter Property="IsIndeterminate" Value="True" />
            </Style>
            </toolkit:BusyIndicator.ProgressBarStyle>
          <!--  <toolkit:BusyIndicator.Template>
                <ControlTemplate TargetType="toolkit:BusyIndicator">
                    <Grid Background="#33647BBC" Visibility="{TemplateBinding IsBusy, Converter={StaticResource ValueToVisibilityConverter}}">
                        <AdornedElementPlaceholder />
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Width="300" >
                            <Grid Margin="10,5">
                                <ProgressBar IsIndeterminate="True" Style="{TemplateBinding ProgressBarStyle}" />
                                <TextBlock Text="{TemplateBinding BusyContent}" HorizontalAlignment="Center" FontSize="16"/>
                            </Grid>
                            <Button Command="{Binding CancelSearchCommand}" Margin="0,5" HorizontalAlignment="Center" 
                                    Content="Anuluj" Background="{x:Null}" BorderThickness="0" FontSize="14" FontWeight="Medium" />
                    </StackPanel>
                    </Grid>
                </ControlTemplate>
            </toolkit:BusyIndicator.Template>-->
            <ListBox x:Name="MovieListBox"  Background="{x:Null}" 
                     ItemsSource="{Binding MovieList}" 
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
				VerticalAlignment="Top" Height="Auto"
				IsSynchronizedWithCurrentItem="True" BorderThickness="0">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <view:Movie />
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Background="#969696" Columns="{Binding ActualWidth, Converter={StaticResource ResourceKey=WidthToColumnNumber}, ElementName=MovieListBox}"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="Height" Value="100" />
                        <Setter Property="BorderBrush" Value="LightGray" />
                        <Setter Property="BorderThickness" Value="0,0,1,1" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <mvvm:EventToCommand Command="{Binding MovieSelectionCommand}" CommandParameter="{Binding SelectedIndex, ElementName=MovieListBox}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListBox>
        </toolkit:BusyIndicator>
        <view:MovieDetail Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" 
                              SelectedMovie="{Binding SelectedMovieDetails}" 
                              Visibility="{Binding SelectedMovieDetails, ConverterParameter=NULL, Converter={StaticResource ValueToVisibilityConverter}}"/>

        <StackPanel  Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Background="#FFD0DFE0"
			IsEnabled="{Binding IsBusy, Converter={StaticResource BoolInverter}, Mode=TwoWay}">
            <toolkit:WatermarkTextBox x:Name="SearchBox" Height="Auto" MaxHeight="35" Margin="10,10,10,0" HorizontalAlignment="Stretch"
				TextWrapping="Wrap" Text="{Binding SearchBoxText, Mode=OneWay}" TextAlignment="Left" HorizontalContentAlignment="Center"  Watermark="{StaticResource TitleWaterMark}"/>
            <ComboBox Margin="10,10,10,0" ItemsSource="{Binding Source={StaticResource MovieType}}" SelectedIndex="{Binding SelectedMovieType, Converter={StaticResource MovieTypeToIndex}}"/>
            <yc:YearPicker Margin="10,10,10,0" Text="{Binding SelectedYear, Mode=TwoWay}"/>
            <Button Margin="0,10" Content="{StaticResource Search}" Command="{Binding SearchCommand}" CommandParameter="{Binding Path=Text ,ElementName=SearchBox}" Width="74" />

        </StackPanel>

        <TextBlock Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
			Margin="6" MaxHeight="32" LineHeight="15"
			Text="{Binding CurrentFileName}" 
                   />
        <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="2"
			Visibility="{Binding IsDropZoneVisible, Converter={StaticResource ValueToVisibilityConverter}, Mode=OneWay}"
			HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" 
				FontSize="34" FontWeight="SemiBold">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{StaticResource DropNotAllowed}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDropPossible}" Value="True">
                                <Setter Property="TextBlock.Text" Value="{StaticResource DropHere}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Border x:Name="DropZone">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsDropPossible}" Value="True">
                                <Setter Property="Background" Value="#5E72E55E" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsDropPossible}" Value="False">
                                <Setter Property="Background" Value="#5EE55E5E" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </Grid>
</Window>
